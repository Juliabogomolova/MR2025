#include <iostream>

using RUB = int;

struct Person {
    RUB bank_account;
    RUB income;
    RUB food;
    RUB trip;
    RUB cartex;
    RUB car;
    RUB utility_bills;
    RUB rent;
    RUB mortgage;
    RUB comparison;
};

Person alice;

void alice_income(const int year, const int month)
{
    if (month == 10) {
        alice.income = static_cast<int>(alice.income * 1.07);  
    }

    if (year == 2030 && month == 3) {
        alice.income = static_cast<int>(alice.income * 1.5);  
    }

    alice.bank_account += alice.income;
}

void alice_food()
{
    alice.bank_account -= alice.food;
}

void alice_trip(const int month)
{
    if (month == 8) {
        alice.bank_account -= alice.trip;
    }
}

void alice_car()
{
    alice.bank_account -= alice.car;
}

void alice_cartex(const int month)
{
    if (month == 1) {
        alice.bank_account -= alice.cartex;
    }
}

void alice_mortgage()
{
    alice.bank_account -= alice.mortgage;
}

void print_alice_info()
{
    std::cout << "Alice capital = " << alice.bank_account << " RUR\n";
}

void alice_utility_bills()
{
    alice.bank_account -= alice.utility_bills;
}

Person Bob;

void Bob_income(const int year, const int month)
{
    if (month == 10) {
        Bob.income = static_cast<int>(Bob.income * 1.07);
    }

    if (year == 2030 && month == 3) {
        Bob.income = static_cast<int>(Bob.income * 1.5);
    }

    Bob.bank_account += Bob.income;
}

void Bob_food()
{
    Bob.bank_account -= Bob.food;
}

void Bob_trip(const int month)
{
    if (month == 8) {
        Bob.bank_account -= Bob.trip;
    }
}

void Bob_car()
{
    Bob.bank_account -= Bob.car;
}

void Bob_cartex(const int month)
{
    if (month == 1) {
    Bob.bank_account -= Bob.cartex;
    }
}

void Bob_utility_bills()
{
    Bob.bank_account -= Bob.utility_bills;
}

void Bob_rent()
{
    Bob.bank_account -= Bob.rent;
}

void print_Bob_info()
{
    std::cout << "Bob capital = " << Bob.bank_account << " RUR\n";
}

void inflation()
{
    alice.income = static_cast<RUB>(alice.income * 1.067);
    alice.food = static_cast<RUB>(alice.food * 1.067);
    alice.trip = static_cast<RUB>(alice.trip * 1.067);
    alice.cartex = static_cast<RUB>(alice.cartex * 1.067);
    alice.car = static_cast<RUB>(alice.car * 1.067);
    alice.utility_bills = static_cast<RUB>(alice.utility_bills * 1.067);
    alice.mortgage = static_cast<RUB>(alice.mortgage * 1.067);

    Bob.income = static_cast<RUB>(Bob.income * 1.067);
    Bob.food = static_cast<RUB>(Bob.food * 1.067);
    Bob.trip = static_cast<RUB>(Bob.trip * 1.067);
    Bob.cartex = static_cast<RUB>(Bob.cartex * 1.067);
    Bob.car = static_cast<RUB>(Bob.car * 1.067);
    Bob.utility_bills = static_cast<RUB>(Bob.utility_bills * 1.067);
    Bob.rent = static_cast<RUB>(Bob.rent * 1.067);
}

void alice_init()
{
    alice.bank_account = 1000 * 1000;
    alice.income = 200 * 1000;
    alice.food = 30000;
    alice.trip = 80 * 1000;
    alice.cartex = 50 * 100;
    alice.car = 2000;
    alice.utility_bills = 8000;
    alice.mortgage = 60 * 1000;
}

void Bob_init()
{
    Bob.bank_account = 1000 * 1000;
    Bob.income = 200 * 1000;
    Bob.food = 35000;
    Bob.trip = 90 * 1000;
    Bob.cartex = 70 * 100;
    Bob.car = 2000;
    Bob.utility_bills = 7000;
    Bob.rent = 30 * 1000;
}

void comparison()
{
    if (Bob.bank_account > alice.bank_account) {
        std::cout << "Bob is living better\n";
    }
    else if (alice.bank_account > Bob.bank_account) {
        std::cout << "Alice is living better\n";
    }
    else {
        std::cout << "Alice and Bob live equally well\n";
    }
}


void simulation()
{
    int year = 2025;
    int month = 9;

    while (!(year == 2045 && month == 9)) {
        alice_income(year, month);
        alice_food();
        alice_mortgage();
        alice_utility_bills();
        alice_car();
        alice_cartex(month);
        alice_trip(month);

        Bob_income(year, month);
        Bob_food();
        Bob_rent();
        Bob_utility_bills();
        Bob_car();
        Bob_cartex(month);
        Bob_trip(month);

        inflation();

        ++month;
        if (month == 13) {
            month = 1;
            ++year;
        }
    }
}

int main()
{
    alice_init();

    Bob_init();

    simulation();

    print_alice_info();

    print_Bob_info();

    comparison();

    return 0;
}

// Добавлены выплаты по ипотеке у Элис
// Добавлено изменение стоимости чего-либо в связи с инфляцией
// Добавлено сравнение банковских счетов Элис и Боба
